// Generated by CoffeeScript 2.2.1
(function() {
  /*
    browser-sync --server --files "."
    coffee -wc *.coffee
  */
  var checando, day, i, idade, isBoolean, len, longString, name, output, stringArray, ternarioNull, word;

  name = 'josafa';

  output = document.getElementById("codigo");

  output.innerHTML = `Olá ${name} <br>`;

  if (typeof name === 'string') {
    output.insertAdjacentHTML('beforeend', 'Tipo string <br>');
  }

  isBoolean = false;

  if (typeof isBoolean === 'boolean') {
    output.insertAdjacentHTML('beforeend', 'Tipo  boolean! <br>');
  }

  /*
    Interpolação é igual a do ruby!
    ou seja, apenas funciona quando a string estar dentro
    de aspas duplas
  */
  output.insertAdjacentHTML("beforeend", `${5.3456.toFixed(2)} <br>`);

  longString = "String long apenas para teste";

  stringArray = longString.split(" ");

  for (i = 0, len = stringArray.length; i < len; i++) {
    word = stringArray[i];
    output.insertAdjacentHTML("beforeend", word + '<br>');
  }

  // Operações com string praticamente iguais a do java
  output.insertAdjacentHTML('beforeend', longString.length);

  ternarioNull = null;

  idade = 18;

  // açucar sintático da linguagem! é permitido tanto espaço quanto não
  if (idade != null) {
    output.insertAdjacentHTML("beforeend", "<br>idade");
  }

  if (typeof velho !== "undefined" && velho !== null) {
    output.insertAdjacentHTML("beforeend", "velho");
  }

  
  checando = typeof ternario !== "undefined" && ternario !== null ? ternario : "Segunda opção";

  output.insertAdjacentHTML("beforeend", `<br>${checando}`);

  day = 'Sun';

  switch (day) {
    case "Mon":
      go(work);
      break;
    case "Tue":
      go(relax);
      break;
    case "Thu":
      go(iceFishing);
      break;
    case "Sun":
      output.insertAdjacentHTML("beforeend", "<br>oi");
      break;
    default:
      go(work);
  }

  // quando a operação necessita mais de uma linha o operador then não é necessário

}).call(this);
